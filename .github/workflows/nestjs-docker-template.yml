name: NestJS Docker Build and Push Template

on:
  workflow_call:  
    inputs:
      branch:
        required: true
        type: string
      aws_region: #Provisorio, cuando vayamos a ECR no va a ser falta
        required: true
        type: string        
      image_name:
        required: true
        type: string
      image_tag:
        required: true
        type: string   
      aws_account:
        required: true
        type: string
      roletoassume:
        required: true
        type: string

permissions:
  contents: read
  id-token: write

jobs:
  build:
    name: Build Docker Image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Validate Image Tag
        run: |
          if [[ ! "${{ inputs.image_tag }}" =~ ^[0-99]+\.[0-99]+\.[0-99]+$ ]]; then
            echo "Invalid tag format: ${{ inputs.image_tag }}. Tags must be in the format X.X.X (e.g., 1.0.0)."
            exit 1
          fi
          echo "${{ inputs.image_tag }} is a valid Tag!"

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          audience: sts.amazonaws.com
          role-to-assume: arn:aws:iam::${{ inputs.aws_account }}:role/${{ inputs.roletoassume }}
          aws-region: us-east-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1      

      - name: Install Dependencies
        run: |
          docker build \
            --file Dockerfile \
            --target builder \
            -t ${{ inputs.image_name }}:builder .

      # SE COMENTAN PRUEBAS UNITARIAS - TODO: REVISAR CON DEV EST√ÅN FALLANDO
      # - name: Run Unit Test
      #   run: |
      #     docker run --rm ${{ inputs.image_name }}:builder npm run test            

      - name: Build Docker image
        run: |
          docker build \
            --file Dockerfile \
            --target production \
            -t ${{ inputs.aws_account }}.dkr.ecr.us-east-1.amazonaws.com/${{ inputs.image_name }}:${{ inputs.image_tag }} .    

      - name: Push Docker image
        run: |
          docker push ${{ inputs.aws_account }}.dkr.ecr.us-east-1.amazonaws.com/${{ inputs.image_name }}:${{ inputs.image_tag }}        